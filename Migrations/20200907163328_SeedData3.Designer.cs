// <auto-generated />
using System;
using FastnMenu.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FastnMenu.Migrations
{
    [DbContext(typeof(FastNMenuContext))]
    [Migration("20200907163328_SeedData3")]
    partial class SeedData3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FastnMenu.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Kahvaltı"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Soğuk İçeçekler"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Sıcak İçeçekler"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Ana Yemekler"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Tatlılar"
                        });
                });

            modelBuilder.Entity("FastnMenu.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubscriptionExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkHour")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Pendik/İstanbul",
                            CompanyName = "Feramuz Restoran",
                            CompanyTypeId = 1,
                            Description = "Uygun Fiyat Kaliteli Yemek",
                            Email = "feramuzrestoran@gmail.com",
                            IsActive = true,
                            Phone = "02164999999",
                            Picture = "https://g7.pngresmi.com/preview/524/137/77/gluten-free-diet-logo-celiac-disease-wheat-vector-restaurant-logo.jpg",
                            QRCode = "5f3d7a4f29acbf385a539ee6",
                            SubscriptionExpiryDate = new DateTime(2020, 9, 7, 20, 33, 27, 819, DateTimeKind.Local).AddTicks(9118),
                            SubscriptionStartDate = new DateTime(2020, 9, 7, 19, 33, 27, 818, DateTimeKind.Local).AddTicks(6365),
                            WorkHour = "8-20"
                        });
                });

            modelBuilder.Entity("FastnMenu.Models.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Restoran"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Kafe"
                        });
                });

            modelBuilder.Entity("FastnMenu.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Sahanda Yumurta",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 10.0,
                            ShortDescription = "Tereyağlı sahanda yumurta"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Didi Soğuk Çay",
                            Picture = "https://www.caykursatis.com/didi-500-ml-seftali-aromali-soguk-cay-caykur-soguk-cay-soguk-cay-caykur-soguk-cay-618-13-O.jpg",
                            Price = 4.0,
                            ShortDescription = "Kutu Didi Soğuk Çay"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Bardak Çay",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 2.0,
                            ShortDescription = "İnce belli bardak çay"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Fincan Çay",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 4.0,
                            ShortDescription = "Fincan Çay"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Fırında Çöp Şiş",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 30.0,
                            ShortDescription = "Fırında Tavuk Çöp Şiş"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Pilav",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 7.5,
                            ShortDescription = "Pirinç Pilavı"
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Adana Kebap",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 10.0,
                            ShortDescription = "Nefis Adana Kebap"
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Sütlaç",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 10.0,
                            ShortDescription = "Sütlaç"
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Magnolia",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 10.0,
                            ShortDescription = "Kat kat puding ve bisküvi parçacıkları"
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 1,
                            Discount = 0.0,
                            Name = "Tavuklu Patates Yemeği",
                            Picture = "https://harbiyiyorum.com/wp-content/uploads/sahanda-yumurta-ft.jpg",
                            Price = 10.0,
                            ShortDescription = "Nefis Tavuklu Patates Yemeği"
                        });
                });

            modelBuilder.Entity("FastnMenu.Models.MenuCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            MenuId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            MenuId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            MenuId = 3
                        },
                        new
                        {
                            CategoryId = 3,
                            MenuId = 4
                        },
                        new
                        {
                            CategoryId = 4,
                            MenuId = 5
                        },
                        new
                        {
                            CategoryId = 4,
                            MenuId = 6
                        },
                        new
                        {
                            CategoryId = 4,
                            MenuId = 7
                        },
                        new
                        {
                            CategoryId = 4,
                            MenuId = 10
                        },
                        new
                        {
                            CategoryId = 5,
                            MenuId = 8
                        },
                        new
                        {
                            CategoryId = 5,
                            MenuId = 9
                        });
                });

            modelBuilder.Entity("FastnMenu.Models.Company", b =>
                {
                    b.HasOne("FastnMenu.Models.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastnMenu.Models.Menu", b =>
                {
                    b.HasOne("FastnMenu.Models.Company", "Company")
                        .WithMany("Menus")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastnMenu.Models.MenuCategory", b =>
                {
                    b.HasOne("FastnMenu.Models.Category", "Category")
                        .WithMany("MenuCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastnMenu.Models.Menu", "Menu")
                        .WithMany("MenuCategories")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
